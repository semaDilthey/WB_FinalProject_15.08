//
// Author.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Author: Codable, JSONEncodable, Hashable {

    /** The unique identifier for the author. */
    public var key: String?
    /** The author's full name. */
    public var name: String?
    /** The birth date of the author. */
    public var birthDate: String?
    /** The death date of the author, if applicable. */
    public var deathDate: String?

    public init(key: String? = nil, name: String? = nil, birthDate: String? = nil, deathDate: String? = nil) {
        self.key = key
        self.name = name
        self.birthDate = birthDate
        self.deathDate = deathDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case key
        case name
        case birthDate = "birth_date"
        case deathDate = "death_date"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(birthDate, forKey: .birthDate)
        try container.encodeIfPresent(deathDate, forKey: .deathDate)
    }
}

